g.node-subgroup {
  cursor: pointer;
  pointer-events: all;
}

/* Orbit Label and Actions container */
.orbit-overlay-container {
  @apply absolute;
  width: 100%;
  bottom: 0;
}

/* Vectors manually appended for each hierarchy node */
.node-vector {
  @apply relative;
  z-index: 16;
}

.node-vector-group {
  @apply w-full h-full;
}

/* Outline for selected node (not-winning) */
.node-vector-group.selected::before {
  @apply absolute h-full w-full;
  content: "";
  z-index: 15;
  left: 0;
  top: .75px;
  background: url(/assets/plannit-selected-outline-no-win.svg);
  background-repeat: no-repeat;
  background-position: center;
}

/* Outline for winning node (has hard coded win colour) */
.node-vector-group.winning::before {
  background: url(/assets/plannit-selected-outline-win.svg) no-repeat center;
}

/* Tick icon for winning node */
.node-vector-group.winning::after {
  @apply absolute top-1 h-full w-full;
  content: "";
  left: 2%;
  z-index: 16;
  background: url(/assets/icons/plannit-winning-icon.svg) no-repeat;
  background-size: 1.5rem;
}



/* Outline positioning for specific node scales */
.node-vector-group.selected.astro::before {
  background-size: 87px;
  left: .5px;
  top: .5px;
}

.node-vector-group.selected.sub::before {
  background-size: 70px;
  left: -.5px;
  top: -14.5px;
}

.node-vector-group.selected.atom::before {
  background-size: 96px;
}

/* Tick positioning for specific node scales */
.node-vector-group.winning.astro::after {
  top: 1rem;
}
.node-vector-group.winning.astro::after {
  top: .75rem;
}


svg path.link {
  fill: none;
}


@media screen and (min-width: 768px) {
  .node-subgroup {
    transform: scale(2) translate(-62px, -52px);
  }
}

@media screen and (min-width: 1280px) {
  .node-subgroup {
    transform: scale(3.5) translate(-62px, -52px);
  }
}